handler: func/createDonorResponseV1/index.handler
description: Create Donor Response
package:
  patterns:
    - func/createDonorResponseV1/**
# provisionedConcurrency: ${self:custom.env.lambda.PROVISIONED_CONCURRENCY}
environment: # Define function environment variables here
  AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  TABLE_NAME: ${self:custom.env.dynamodb.DONOR_RESPONSE_STORE}
  SQS_QUEUE_URL: ${self:custom.env.sqs.CONTACT_TO_MAILCHIMP_QUEUE_URL}
  MONTHLY_DONTATION_LINK_100: ${self:custom.env.lambda.MONTHLY_DONTATION_LINK_100}
  MONTHLY_DONTATION_LINK_300: ${self:custom.env.lambda.MONTHLY_DONTATION_LINK_300}
  MONTHLY_DONTATION_LINK_500: ${self:custom.env.lambda.MONTHLY_DONTATION_LINK_500}
events:
  - http:
    #### API gateway configurtaion   
      path: /v1/donor_response
      method: POST
      private: false
      integration: lambda-proxy
      request:
        schemas:
          application/json:
            schema: ${file(models/createDonorResponseV1_input_schema.json)}
            name: createDonorResponseV1Input
            description: Schema of request body for Create Donor Response API (v1)